@use "./variables.scss" as *;
@use "sass:color";
@use "./colors.scss";

.callout {
  border: 1px solid var(--border);

  --border: color-mix(in srgb, var(--color) 60%, var(--base));

  & blockquote {
    border-left: 2px solid var(--border);
  } 

  & .callout {
    border-left: 2px solid var(--border);
  } 

  --bg: color-mix(in srgb, var(--color) 4%, var(--base));

  background-color: var(--bg);
  scrollbar-color: var(--lightgray) var(--bg);
  border-radius: 5px;
  margin: 1rem 0;
  padding: 0 1rem;
  overflow-y: hidden;
  transition: max-height 0.3s ease;
  box-sizing: border-box;

  & > *:nth-child(2) {
    margin-top: 0;
  }

  // & > .callout-content > :first-child {
  //   margin-top: 0;
  // }

  & .callout-content {
    margin-bottom: calc(2 * $base-margin);

    & p:first-child,
    & > .vsc-controller + p {
      // vsc-controllers can be spawned ahead of the first paragraph
      margin-top: 0;
    }

    & p:last-child {
      margin-bottom: 0;
    }
  }

  --callout-icon-note: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="2" x2="22" y2="6"></line><path d="M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z"></path></svg>');
  --callout-icon-abstract: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><path d="M12 11h4"></path><path d="M12 16h4"></path><path d="M8 11h.01"></path><path d="M8 16h.01"></path></svg>');
  --callout-icon-info: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>');
  --callout-icon-todo: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path><path d="m9 12 2 2 4-4"></path></svg>');
  --callout-icon-tip: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg> ');
  --callout-icon-success: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg> ');
  --callout-icon-question: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line></svg> ');
  --callout-icon-warning: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>');
  --callout-icon-failure: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg> ');
  --callout-icon-danger: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon></svg> ');
  --callout-icon-bug: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="8" height="14" x="8" y="6" rx="4"></rect><path d="m19 7-3 2"></path><path d="m5 7 3 2"></path><path d="m19 19-3-2"></path><path d="m5 19 3-2"></path><path d="M20 13h-4"></path><path d="M4 13h4"></path><path d="m10 4 1 2"></path><path d="m14 4-1 2"></path></svg>');
  --callout-icon-example: url('data:image/svg+xml; utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line></svg> ');
  --callout-icon-quote: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"></path><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"></path></svg>');
  --callout-icon-fold: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"%3E%3Cpolyline points="6 9 12 15 18 9"%3E%3C/polyline%3E%3C/svg%3E');

  &[data-callout] {
    --color: #448aff;
    --border: #448aff44;
    --bg: #448aff10;
    --callout-icon: var(--callout-icon-note);
  }

  &[data-callout="abstract"] {
    --color: #00b0ff;
    --border: #00b0ff44;
    --bg: #00b0ff10;
    --callout-icon: var(--callout-icon-abstract);
  }

  &[data-callout="info"],
  &[data-callout="todo"] {
    --color: #00b8d4;
    --border: #00b8d444;
    --bg: #00b8d410;
    --callout-icon: var(--callout-icon-info);
  }

  &[data-callout="todo"] {
    --callout-icon: var(--callout-icon-todo);
  }

  &[data-callout="multi"]{
    --color: transparent;
    --border: none;
    --bg: none;
    columns: 2 auto;
  }

  &[data-callout="tip"] {
    --color: #00bfa5;
    --border: #00bfa544;
    --bg: #00bfa510;
    --callout-icon: var(--callout-icon-tip);
  }

  &[data-callout="success"] {
    --color: #09ad7a;
    --border: #09ad7144;
    --bg: #09ad7110;
    --callout-icon: var(--callout-icon-success);
  }

  &[data-callout="question"] {
    --color: #dba642;
    --border: #dba64244;
    --bg: #dba64210;
    --callout-icon: var(--callout-icon-question);
  }

  &[data-callout="warning"] {
    // --color: #db8942;
    --color: var(--orange);
    --border: #db894244;
    --bg: #db894210;
    --callout-icon: var(--callout-icon-warning);
  }

  &[data-callout="failure"],
  &[data-callout="danger"],
  &[data-callout="bug"] {
    // --color: #db4242;
    --color: var(--red);
    --border: #db424244;
    --bg: #db424210;
    --callout-icon: var(--callout-icon-failure);
  }

  &[data-callout="bug"] {
    --callout-icon: var(--callout-icon-bug);
  }

  &[data-callout="danger"] {
    --callout-icon: var(--callout-icon-danger);
  }

  &[data-callout="example"] {
    --color: #7e708d;
    --border: #7a43b544;
    --bg: #7a43b510;
    --callout-icon: var(--callout-icon-example);
  }

  &[data-callout="quote"] {
    --color: var(--secondary);
    --border: var(--lightgray);
    --callout-icon: var(--callout-icon-quote);
  }

  &.is-collapsed > .callout-title > .fold-callout-icon {
    transform: rotateZ(-90deg);
  }
}

.callout-title {
  display: flex;
  align-items: flex-start;
  gap: 5px;
  padding: 1rem 0;
  color: var(--color);

  --icon-size: 18px;

  & .fold-callout-icon {
    transition: transform 0.15s ease;
    opacity: 0.8;
    cursor: pointer;
    --callout-icon: var(--callout-icon-fold);
  }

  & > .callout-title-inner > p {
    color: var(--color);
    margin: 0;
  }

  .callout-icon,
  & .fold-callout-icon {
    width: var(--icon-size);
    height: var(--icon-size);
    flex: 0 0 var(--icon-size);

    // icon support
    background-size: var(--icon-size) var(--icon-size);
    background-position: center;
    background-color: var(--color);
    mask-image: var(--callout-icon);
    mask-size: var(--icon-size) var(--icon-size);
    mask-position: center;
    mask-repeat: no-repeat;
    padding: 0.2rem 0;
  }

  .callout-title-inner {
    font-weight: 700;
  }
}

/* remove callout-title and make callout-content as part of main callout for box formatting */
div[data-callout="multi"].callout > .callout-title { display: none; }
div[data-callout="multi"].callout > .callout-content { display: contents; }
/* make the main callout a flex and remove box formatting */
/* --columns: unset to undo Sanctum's mod */
div[data-callout="multi"].callout
  { display: flex; flex-wrap: wrap; gap: var(--callout-gap); background: unset; border: unset; margin: unset; padding: unset; clear: both; --columns: unset; }
/* make the subcallout in flex column to allow growing vertically */
div[data-callout="multi"].callout .callout:not([data-callout="multi"]) { display: flex; flex-direction: column; }
div[data-callout="multi"].callout:not(.is-collapsed) .callout { margin-inline: var(--callout-margin); margin-block: var(--callout-margin); } /* to allow spacing for box shadow */
div[data-callout="multi"].callout .callout .callout-content { flex-grow: 1}

div[data-callout="multi"].callout > .callout-content > *:is(div,ul,blockquote,p) { flex: 1 1 var(--callout-min-width); margin: 0;}

/* metadata "wide-x" to control subcallout flexible max width. only discrete 2,4,8,16 */
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="min-0"] { flex-basis: 0; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="wide-2"] { flex-grow: 2; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="wide-3"] { flex-grow: 3; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="wide-4"] { flex-grow: 4; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="wide-5"] { flex-grow: 5; }

@media (min-width: 500px) {
  /* .is-collapsed is used to draw the border-left only when it's collapsed */
  div[data-callout="multi"].callout > div.callout-content .callout.is-collapsed { box-shadow: unset; height: min-content;}
}

/* -- MCC Variant - Flexible Height for Subcallout / Children -- */
/* also useful if one wants to have non callout children like table and don't want to fill the height */
div[data-callout="multi"].callout {}
div[data-callout="multi"][data-callout-metadata*="flex-h"].callout { align-items: flex-start; }

/* -- MCC Variation - Fixed Columns -- */
div[data-callout="multi"][data-callout-metadata*="col3"]:not([data-callout-metadata*="icons"]).callout {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}

/* -- MCC Variation - Icons -- */

/* Main code */
div[data-callout="multi"][data-callout-metadata*="icons"] {

  &.callout { justify-content: center; }
  &.callout .callout { display: flex; flex-direction: row; flex-wrap: wrap; }
  &.callout.callout .callout-content > p { flex-grow: 1; text-align: center; }
  /* Options for number of columns */
  &[data-callout-metadata*="col2"].callout.callout .callout-content > p { flex-basis: 40%; }
  &[data-callout-metadata*="col3"].callout.callout .callout-content > p { flex-basis: 30%; }
  &[data-callout-metadata*="col4"].callout.callout .callout-content > p { flex-basis: 22%; }
  &[data-callout-metadata*="col5"].callout.callout .callout-content > p { flex-basis: 18%; }

  /* listive theme */
  &.callout p:first-child { margin-top: revert; }
}


div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="mw0"].callout.callout { flex-basis: 0; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw1"].callout { flex: 1 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw2"].callout { flex: 2 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw3"].callout { flex: 3 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw4"].callout { flex: 4 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw5"].callout { flex: 5 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw6"].callout { flex: 6 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw7"].callout { flex: 7 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw8"].callout { flex: 8 0 auto; }
div[data-callout="multi"].callout > .callout-content > div[data-callout-metadata*="dw9"].callout { flex: 9 0 auto; }
